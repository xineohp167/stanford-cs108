//MoodyStudent.java/* A subclass of Student that also implements the Moodable interface. Like a student, but we also respond to getMood().*/import java.awt.Color;public class MoodyStudent extends Student implements Moodable {	// Our ctor just chains up to the Student ctor	public MoodyStudent(int units) {		super(units);	}			// Implement the method from the Moodable interface	public Color getMood() {		if (getStress() > 200) return(Color.red);		else return(Color.gray);	}		// sample client code	public static void main(String[] args) {		MoodyStudent s = new MoodyStudent(10);						// ok -- Moodable is a "superclass" of MoodyStudent		Moodable m = s;					// ok -- pops down()		Color mood = m.getMood();				// No -- CT type is Moodable, not Student		// m.getUnits();	}}// Side point: can have overlap in interfaces, and it still worksinterface Moodable2 {	public Color getMood();}